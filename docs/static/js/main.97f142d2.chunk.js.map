{"version":3,"sources":["components/methods/middle-square/ResultsTableMiddleSquare.js","hooks/useForm.js","helpers/methods/middleSquare.js","components/methods/middle-square/MiddleSquare.js","components/methods/middle-product/ResultsTableMiddleProduct.js","helpers/methods/middleProduct.js","components/methods/middle-product/MiddleProduct.js","components/methods/linear-algorithm/ResultsTableLinearAlgorithm.js","components/methods/linear-algorithm/LinearAlgorithm.js","helpers/methods/linearAlgorithm.js","components/methods/multiplicative-algorithm/ResultsTableMultiplicativeAlgorithm.js","components/methods/multiplicative-algorithm/MultiplicativeAlgorithm.js","helpers/methods/multiplicativeAlgorithm.js","components/about/About.js","components/sidebar/Sidebar.js","PseudoAleatorio.js","index.js"],"names":["ResultsTableMiddleSquare","series","tableRandomNumbers","info","degenerate","periodRange","degenerateIndex","amountBucle","className","scope","map","row","i","yi","operaciones","left","center","right","xi","ri","useForm","initialState","useState","form","setForm","target","name","value","getMiddleNumber","number","digits","amountSides","numberStr","toString","digitsOfNumber","length","substr","MiddleSquare","solved","setSolved","table","setTable","semilla","cantidad","handleInputChange","onSubmit","event","preventDefault","seed","amount","randomNumbers","square","Math","pow","middleNumber","parseInt","getPeriod","j","getDegenerate","getMiddleSquare","type","placeholder","onChange","onClick","ResultsTableMiddleProduct","MiddleProduct","equalDigits","setEqualDigits","semilla1","semilla2","role","seed1","seed2","xNumbers","product","getMiddleProduct","ResultsTableLinearAlgorithm","LinearAlgorithm","constanteK","numDigitos","k","g","Number","isInteger","log","floor","m","c","p","primeNumbers","count","flag","getPrimeNumber","a","riDigits","copyOfInitialElement","getLinearAlgorithm","class","ResultsTableMultiplicativeAlgorithm","MultiplicativeAlgorithm","getMultiplicativeAlgorithm","About","Sidebar","currentPage","setCurrentPage","handleClick","pages","PseudoAleatorio","divRoot","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.97f142d2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ResultsTableMiddleSquare = ({ series }) => {\n\n    const { tableRandomNumbers, info } = series;\n    const { degenerate, periodRange } = info;\n    const { degenerateIndex, amountBucle } = degenerate; \n\n    return (\n        <>\n\n\n            {\n                periodRange === -1 && degenerateIndex === -1\n                &&\n                <div className=\"alert alert-success ml-5 mr-5\"> Hasta el momento la serie no se degenera </div>\n            }\n            {\n                periodRange !== -1\n                &&\n                <div className=\"alert alert-danger ml-5 mr-5\"> Su serie tiene un periodo de = { periodRange } </div>\n            }\n\n            {\n                degenerateIndex !== -1\n                &&\n                <div className=\"alert alert-warning ml-5 mr-5\"> Su serie se degenera en i = { degenerateIndex } </div>\n            }\n\n            {\n                amountBucle !== 0\n                &&\n                <div className=\"alert alert-danger ml-5 mr-5\"> Se genera un bucle de { amountBucle }</div>\n            }\n            \n\n            <div className=\"d-flex justify-content-center\">\n                \n                <div className=\"mt-5 p-5 d-inline-flex flex-column\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"bg-success\">\n                            <tr>\n                                <th scope=\"col\"> i </th>\n                                <th scope=\"col\"> Yi </th>\n                                <th scope=\"col\"> Operaciones </th>\n                                <th scope=\"col\"> Xi </th>\n                                <th scope=\"col\"> ri </th>\n                            </tr>\n                        </thead>\n                    <tbody>\n                            {\n                                tableRandomNumbers.map( row => (\n                                    <tr className={ `table-${ ( row.i === degenerateIndex ) ? \"warning\" : \"success\" } text-center` } key={ row.i }>\n                                        <th scope=\"row\">{ row.i }</th>\n                                        <td>{ row.yi }</td>\n                                            <td><p className=\"text-primary d-inline\">{ row.operaciones.left }</p><p className=\"text-danger d-inline\">{ row.operaciones.center }</p><p className=\"text-primary d-inline\">{ row.operaciones.right }</p></td>\n                                        <td>{ row.xi }</td>\n                                        {/* row.operaciones.center !== \"0\" && <td>{ row.ri }</td> */}\n                                        <td>{ row.operaciones.center !== \"0\" && row.ri }</td>\n                                    </tr>\n                                ))\n                           }\n                           \n                        </tbody>\n                        \n                    </table>\n                </div>\n            </div>\n        </>\n    );\n};\n","import { useState } from 'react';\n\nexport const useForm = ( initialState ) => {\n\n    const [ form, setForm ] = useState( initialState );\n\n    const handleInputChange = ({ target }) => {\n\n        setForm({\n\n            ...form,\n            [ target.name ]: target.value,\n\n        });\n\n    }\n\n    const clearInput = () =>\n        setForm( initialState );\n\n    return [\n        form,\n        handleInputChange,\n        clearInput,\n    ];\n}\n","const getMiddleNumber = ( number, digits ) => {\n    \n    if ( number !== 0 ) {\n        let amountSides = 0;\n        let numberStr = number.toString();\n        let digitsOfNumber = numberStr.length;\n\n        if ( ( ( digitsOfNumber % 2 === 0 ) || ( digits % 2 === 0 ) ) && !( ( digitsOfNumber % 2 === 0 ) && ( digits % 2 === 0 ) ) ) {\n            numberStr = \"0\" + numberStr;\n            digitsOfNumber += 1;\n        }\n        while ( ( amountSides * 2 ) + digits !== digitsOfNumber )\n            amountSides += 1;\n\n        const left   = numberStr.substr( 0, amountSides );\n        const center = numberStr.substr( amountSides, digits );\n        const right  = numberStr.substr( digits + amountSides, amountSides );\n\n        return {\n            left,\n            center,\n            right,\n        };\n    } else {\n        return {\n            \"left\": \"0\",\n            \"center\": \"0\",\n            \"right\": \"0\",\n        };\n    };\n};\n\nconst getPeriod = ( randomNumbers ) => {\n\n    for ( let i = 2; i < randomNumbers.length; i++ ) {\n        if ( randomNumbers[ i ] === randomNumbers[ 1 ] ) {\n            if ( i < randomNumbers.length - 1 && randomNumbers[ i + 1 ] === randomNumbers[ 2 ] ) {\n                return i - 1;\n            }\n        }\n    }\n\n    return -1;\n\n};\nconst getDegenerate = ( randomNumbers ) => {\n\n    let degenerateIndex = -1;\n    let amountBucle = 0;\n\n    for ( let i = 1; i < randomNumbers.length; i++ ) {\n        for ( let j = 2; j < randomNumbers.length; j++ ) {\n            if ( i != j && randomNumbers[ i ] !== 0 && randomNumbers[ j ] === randomNumbers[ i ] ) {\n                degenerateIndex = j;\n                if ( i + 1 < randomNumbers.length && j + 1 <= randomNumbers.length && randomNumbers[ i + 1 ] === randomNumbers[ j + 1 ] ) {\n                    i += 1;\n                    j += 1;\n                    amountBucle += 1;\n                    while ( i < randomNumbers.length && j <= randomNumbers.length && i != j && randomNumbers[ i ] === randomNumbers[ j ] && randomNumbers[ i ] !== randomNumbers[ degenerateIndex ] ) {\n                        amountBucle += 1;\n                        i += 1;\n                        j += 1;\n                    }\n                }\n                return {\n                    degenerateIndex,\n                    amountBucle,\n                }\n            }\n        }\n    }\n    return {\n        degenerateIndex,\n        amountBucle,\n    }\n};\n\nexport const getMiddleSquare = ( seed, amount ) => {\n    \n    let randomNumbers = [];\n    randomNumbers[ 0 ] = seed;\n    let tableRandomNumbers = [];\n    const seedStr = seed.toString();\n    const digits = seedStr.length;\n\n    for ( let i = 1; i <= amount; i++ ) {\n        const square = Math.pow( randomNumbers[ i - 1 ], 2 );\n        const middleNumber = getMiddleNumber( square, digits );\n        // const randomNumber = parseInt( middleNumber.center ) * Math.pow( 10, -digits );\n\n        randomNumbers[ i ] = parseInt( middleNumber.center );\n        tableRandomNumbers[ i - 1 ] = {\n            i,\n            \"yi\": square,\n            \"operaciones\": middleNumber,\n            \"xi\": middleNumber.center,\n            \"ri\": \"0.\" + middleNumber.center,\n        };\n\n        if ( middleNumber.center === \"0\" )\n            break;\n    }\n\n    const periodRange = getPeriod( randomNumbers );\n    let degenerate = {\n        \"degenerateIndex\": -1,\n        \"amountBucle\": 0,\n    }\n\n    if ( periodRange === -1 ) \n        degenerate = getDegenerate( randomNumbers );\n\n    if ( degenerate.degenerateIndex === -1 && randomNumbers[ randomNumbers.length - 1 ] === 0 ) {\n        degenerate.degenerateIndex = randomNumbers.length - 1;\n    }\n\n    return {\n        tableRandomNumbers,\n        info: {\n            degenerate,\n            periodRange,\n        }\n    };\n}\n","import React, { useState } from 'react';\n\nimport { ResultsTableMiddleSquare } from './ResultsTableMiddleSquare';\n\nimport { useForm } from '../../../hooks/useForm';\nimport { getMiddleSquare } from '../../../helpers/methods/middleSquare';\n\nimport './middleSquare.css'\n\n\nexport const MiddleSquare = () => {\n\n    const [ solved, setSolved ] = useState( false );\n    const [ table, setTable ] = useState({});\n\n    const [ { semilla, cantidad }, handleInputChange ] = useForm({\n        semilla: \"\",\n        cantidad: \"\",\n    });\n\n    const handleSubmit = ( event ) => {\n        event.preventDefault();\n        setSolved( true );\n        setTable( getMiddleSquare( parseInt( semilla ), parseInt( cantidad ) ) );\n    }\n\n    const handleHideClick = ( event ) => {\n        setSolved( false );\n    };\n\n    return (\n        <>\n\n            <div className=\"\">\n                <h1 className=\"text-center\"> Numeros Pseudo Aleatorios </h1>\n            </div>\n            <hr />\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"mt-5 jumbotron p-5 text-secondary d-inline-flex flex-column\">\n                    <h3 className=\"font-weight-bold text-center display-5\"> Cuadrados Medios </h3>\n                    <hr />\n                    <div className=\"\">\n                        <form onSubmit={ handleSubmit }>\n                            <div className=\"form-group\">\n                                <label> Semilla </label>\n                                <input\n                                    name=\"semilla\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"6345\"\n                                    onChange={ handleInputChange }\n                                />\n                                <small className=\"form-text text-muted\"> Debe introducir un numero mayor a 9 </small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label> Cantidad </label>\n                                <input\n                                    name=\"cantidad\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"5\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-success\"> Generar </button>\n                            {\n                                solved\n                                &&\n                                <button className=\"btn btn-danger ml-3\" onClick={ handleHideClick }> Ocultar </button>\n                            }\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            {\n                solved\n                &&\n                <ResultsTableMiddleSquare series={ table } />\n            }\n        </>\n    );\n\n};\n","import React from 'react';\n\nexport const ResultsTableMiddleProduct = ({ series }) => {\n\n    const { tableRandomNumbers, info } = series;\n    const { degenerate, periodRange } = info;\n    const { degenerateIndex, amountBucle } = degenerate; \n\n    return (\n        <>\n\n            {\n                periodRange === -1 && degenerateIndex === -1\n                &&\n                <div className=\"alert alert-success ml-5 mr-5\"> Hasta el momento la serie no se degenera </div>\n            }\n            {\n                periodRange !== -1\n                &&\n                <div className=\"alert alert-danger ml-5 mr-5\"> Su serie tiene un periodo de = { periodRange } </div>\n            }\n\n            {\n                degenerateIndex !== -1\n                &&\n                <div className=\"alert alert-warning ml-5 mr-5\"> Su serie se degenera en i = { degenerateIndex } </div>\n            }\n\n            {\n                amountBucle !== 0\n                &&\n                <div className=\"alert alert-danger ml-5 mr-5\"> Se genera un bucle de { amountBucle }</div>\n            }\n            \n\n            <div className=\"d-flex justify-content-center\">\n                \n                <div className=\"mt-5 p-5 d-inline-flex flex-column\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"bg-success\">\n                            <tr>\n                                <th scope=\"col\"> i </th>\n                                <th scope=\"col\"> Yi </th>\n                                <th scope=\"col\"> Operaciones </th>\n                                <th scope=\"col\"> X(i + 1) </th>\n                                <th scope=\"col\"> ri </th>\n                            </tr>\n                        </thead>\n                    <tbody>\n                            {\n                                tableRandomNumbers.map( row => (\n                                    <tr className={ `table-${ ( row.i === degenerateIndex ) ? \"warning\" : \"success\" } text-center` } key={ row.i }>\n                                        <th scope=\"row\">{ row.i }</th>\n                                        <td>{ row.yi }</td>\n                                            <td><p className=\"text-primary d-inline\">{ row.operaciones.left }</p><p className=\"text-danger d-inline\">{ row.operaciones.center }</p><p className=\"text-primary d-inline\">{ row.operaciones.right }</p></td>\n                                        <td>{ row.xi }</td>\n                                        {/* row.operaciones.center !== \"0\" && <td>{ row.ri }</td> */}\n                                        <td>{ row.operaciones.center !== \"0\" && row.ri }</td>\n                                    </tr>\n                                ))\n                           }\n                           \n                        </tbody>\n                        \n                    </table>\n                </div>\n            </div>\n        </>\n    );\n};\n","const getMiddleNumber = ( number, digits ) => {\n    \n    if ( number !== 0 ) {\n        let amountSides = 0;\n        let numberStr = number.toString();\n        let digitsOfNumber = numberStr.length;\n\n        if ( ( ( digitsOfNumber % 2 === 0 ) || ( digits % 2 === 0 ) ) && !( ( digitsOfNumber % 2 === 0 ) && ( digits % 2 === 0 ) ) ) {\n            numberStr = \"0\" + numberStr;\n            digitsOfNumber += 1;\n        }\n        while ( ( amountSides * 2 ) + digits !== digitsOfNumber )\n            amountSides += 1;\n\n        const left   = numberStr.substr( 0, amountSides );\n        const center = numberStr.substr( amountSides, digits );\n        const right  = numberStr.substr( digits + amountSides, amountSides );\n\n        return {\n            left,\n            center,\n            right,\n        };\n    } else {\n        return {\n            \"left\": \"0\",\n            \"center\": \"0\",\n            \"right\": \"0\",\n        };\n    };\n};\n\nconst getPeriod = ( randomNumbers ) => {\n\n    for ( let i = 2; i < randomNumbers.length; i++ ) {\n        if ( randomNumbers[ i ] === randomNumbers[ 1 ] ) {\n            if ( i < randomNumbers.length - 1 && randomNumbers[ i + 1 ] === randomNumbers[ 2 ] ) {\n                return i - 1;\n            }\n        }\n    }\n\n    return -1;\n\n};\nconst getDegenerate = ( randomNumbers ) => {\n\n    let degenerateIndex = -1;\n    let amountBucle = 0;\n\n    for ( let i = 1; i < randomNumbers.length; i++ ) {\n        for ( let j = 2; j < randomNumbers.length; j++ ) {\n            if ( i != j && randomNumbers[ i ] !== 0 && randomNumbers[ j ] === randomNumbers[ i ] ) {\n                degenerateIndex = j;\n                if ( i + 1 < randomNumbers.length && j + 1 <= randomNumbers.length && randomNumbers[ i + 1 ] === randomNumbers[ j + 1 ] ) {\n                    i += 1;\n                    j += 1;\n                    amountBucle += 1;\n                    while ( i < randomNumbers.length && j <= randomNumbers.length && i != j && randomNumbers[ i ] === randomNumbers[ j ] && randomNumbers[ i ] !== randomNumbers[ degenerateIndex ] ) {\n                        amountBucle += 1;\n                        i += 1;\n                        j += 1;\n                    }\n                }\n                return {\n                    degenerateIndex,\n                    amountBucle,\n                }\n            }\n        }\n    }\n    return {\n        degenerateIndex,\n        amountBucle,\n    }\n};\n\nexport const getMiddleProduct = ( seed1, seed2, amount ) => {\n    \n    let randomNumbers = [];\n    let xNumbers = [];\n    let tableRandomNumbers = [];\n    const digits = seed1.toString().length;\n    randomNumbers[ 0 ] = seed1;\n\n    xNumbers[ 0 ] = seed1;\n    xNumbers[ 1 ] = seed2;\n\n    for ( let i = 1; i <= amount; i++ ) {\n        const product = xNumbers[ i ] * xNumbers[ i - 1 ];\n        const middleNumber = getMiddleNumber( product, digits );\n        xNumbers[ i + 1 ] = parseInt( middleNumber.center );\n        tableRandomNumbers[ i - 1 ] = {\n            i,\n            \"yi\": `(${ xNumbers[ i ] }) * (${ xNumbers[ i - 1 ] })`,\n            \"operaciones\": middleNumber,\n            \"xi\": middleNumber.center,\n            \"ri\": \"0.\" + middleNumber.center,\n        };\n\n        if ( middleNumber.center === \"0\" )\n            break;\n    }\n\n    const periodRange = getPeriod( xNumbers );\n    let degenerate = {\n        \"degenerateIndex\": -1,\n        \"amountBucle\": 0,\n    }\n\n    if ( periodRange === -1 ) \n        degenerate = getDegenerate( xNumbers );\n\n    if ( degenerate.degenerateIndex === -1 && xNumbers[ xNumbers.length - 1 ] === 0 ) {\n        degenerate.degenerateIndex = xNumbers.length - 1;\n    }\n\n    return {\n        tableRandomNumbers,\n        info: {\n            degenerate,\n            periodRange,\n        }\n    };\n}\n// console.log( getMiddleProduct( 235, 546, 10 ) ); \n","import React, { useState } from 'react';\n\nimport { ResultsTableMiddleProduct } from './ResultsTableMiddleProduct';\n\nimport { useForm } from '../../../hooks/useForm';\nimport { getMiddleProduct } from '../../../helpers/methods/middleProduct';\n\nexport const MiddleProduct = () => {\n\n    const [ solved, setSolved ] = useState( false );\n    const [ table, setTable ] = useState({});\n    const [ equalDigits, setEqualDigits ] = useState( false );\n\n    const [ { semilla1, semilla2, cantidad }, handleInputChange ] = useForm({\n        semilla1: \"\",\n        semilla2: \"\",\n        cantidad: \"\",\n    });\n\n    const handleSubmit = ( event ) => {\n        event.preventDefault();\n        setSolved( true );\n        if ( semilla1.length >= 2 && semilla1.length === semilla2.length ) {\n            setTable( getMiddleProduct( parseInt( semilla1 ), parseInt( semilla2 ), parseInt( cantidad ) ) );\n            setEqualDigits( false );\n        } else {\n            setEqualDigits( true );\n            setSolved( false );\n        }\n\n    }\n\n    const handleHideClick = ( event ) => {\n        setSolved( false );\n    };\n\n    return (\n        <>\n\n            <div className=\"\">\n                <h1 className=\"text-center\"> Numeros Pseudo Aleatorios </h1>\n            </div>\n            <hr />\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"mt-5 jumbotron p-5 text-secondary d-inline-flex flex-column\">\n                    <h3 className=\"font-weight-bold text-center display-5\"> Algoritmo de los <br /> Productos medios </h3>\n                    <hr />\n                    <div className=\"\">\n                        {\n                            equalDigits\n                            &&\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                Los numeros deben de ser <a className=\"alert-link\"> de dos digitos o mayor ambos de la misma cantidad </a> de digitos.\n                            </div>\n                        }\n                        <form onSubmit={ handleSubmit }>\n                            <div className=\"form-group\">\n                                <label> Semilla 1 </label>\n                                <input\n                                    name=\"semilla1\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"6345\"\n                                    onChange={ handleInputChange }\n                                />\n                                <small className=\"form-text text-muted\"> Debe introducir un numero mayor a 9 </small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label> Semilla 2 </label>\n                                <input\n                                    name=\"semilla2\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"6345\"\n                                    onChange={ handleInputChange }\n                                />\n                                <small className=\"form-text text-muted\"> Debe introducir un numero mayor a 9 </small>\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <label> Cantidad </label>\n                                <input\n                                    name=\"cantidad\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"5\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-success\"> Generar </button>\n                            {\n                                solved\n                                &&\n                                <button className=\"btn btn-danger ml-3\" onClick={ handleHideClick }> Ocultar </button>\n                            }\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            {\n                solved\n                &&\n                <ResultsTableMiddleProduct series={ table } />\n            }\n        </>\n    );\n};\n\n","import React from 'react';\n\nexport const ResultsTableLinearAlgorithm = ({ series }) => {\n\n    const { tableRandomNumbers } = series;\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center\">\n                \n                <div className=\"mt-5 p-5 d-inline-flex flex-column\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"bg-success\">\n                            <tr>\n                                <th scope=\"col\"> i </th>\n                                <th scope=\"col\"> Operaciones </th>\n                                <th scope=\"col\"> X(i) </th>\n                                <th scope=\"col\"> r(i) </th>\n                            </tr>\n                        </thead>\n                    <tbody>\n                            {\n                                tableRandomNumbers.map( row => (\n                                    <tr className=\"table-success text-center\" key={ row.i }>\n                                        <th scope=\"row\">{ row.i }</th>\n                                        <td>{ row.operaciones }</td>\n                                        <td>{ row.xi }</td>\n                                        <td>{ row.ri }</td>\n                                    </tr>\n                                ))\n                           }\n                           \n                        </tbody>\n                        \n                    </table>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from 'react';\n\nimport { ResultsTableLinearAlgorithm } from './ResultsTableLinearAlgorithm';\n\nimport { useForm } from '../../../hooks/useForm';\nimport { getLinearAlgorithm } from '../../../helpers/methods/linearAlgorithm';\n\nexport const LinearAlgorithm = () => {\n\n    const [ solved, setSolved ] = useState( false );\n    const [ table, setTable ] = useState({});\n\n    const [ { semilla, cantidad, constanteK, numDigitos }, handleInputChange ] = useForm({\n        semilla: \"\",\n        cantidad: \"\",\n        constanteK: \"\",\n        numDigitos: \"\",\n    });\n\n    const handleSubmit = ( event ) => {\n        event.preventDefault();\n        setSolved( true );\n        setTable( getLinearAlgorithm( parseInt( semilla ), parseInt( cantidad ), parseInt( constanteK ), parseInt( numDigitos ) ) );\n    }\n\n    const handleHideClick = ( event ) => {\n        setSolved( false );\n    };\n\n    return (\n        <>\n\n            <div className=\"\">\n                <h1 className=\"text-center\"> Numeros Pseudo Aleatorios </h1>\n            </div>\n            <hr />\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"mt-5 jumbotron p-5 text-secondary d-inline-flex flex-column\">\n                    <h3 className=\"font-weight-bold text-center display-5\"> Algoritmo Congruencial <br /> Lineal </h3>\n                    <hr />\n                    <div className=\"\">\n                        <form onSubmit={ handleSubmit }>\n                            <div className=\"form-group\">\n                                <label> Semilla x0 </label>\n                                <input\n                                    name=\"semilla\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"6345\"\n                                    onChange={ handleInputChange }\n                                />\n                                <small className=\"form-text text-muted\"> Debe introducir un numero mayor a 0 </small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label> Cantidad (Periodo) </label>\n                                <input\n                                    name=\"cantidad\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"10\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <label> Constante K </label>\n                                <input\n                                    name=\"constanteK\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"543\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label> Numero de digitos deseados </label>\n                                <input\n                                    name=\"numDigitos\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"3\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-success\"> Generar </button>\n                            {\n                                solved\n                                &&\n                                <button className=\"btn btn-danger ml-3\" onClick={ handleHideClick }> Ocultar </button>\n                            }\n                        </form>\n                        {\n                            solved\n                            &&\n                            <>\n                                <div class=\"alert alert-success mt-5\" role=\"alert\">\n                                    <strong> g = { table.g } </strong>\n                                </div>\n                                <div class=\"alert alert-success mt-2\" role=\"alert\">\n                                    <strong> a = { table.a } </strong>\n                                </div>\n                            </>\n                        }\n                        \n                    </div>\n                </div>\n            </div>\n\n            {\n                solved\n                &&\n                <ResultsTableLinearAlgorithm series={ table } />\n            }\n        </>\n    );\n};\n\n","const getPrimeNumber = ( p ) => {\n\n    let primeNumbers = [];\n    let count = 0;\n\n    for ( let i = 1; i < p; i++ ) {\n        let flag = 0;\n        for ( let j = 2; j < i; j++ ) {\n            if ( i % j == 0 ) {\n                flag = 1;\n                break;\n            }\n        }\n        if ( i > 1 && flag == 0 ) {\n            primeNumbers[ count ] = ( i );\n            count += 1;\n        }\n    }\n    return primeNumbers[ count - 1 ];\n\n};\n\nexport const getLinearAlgorithm = ( seed, amount, k, digits ) => {\n\n    const g = Number.isInteger( Math.log( amount ) / Math.log( 2 ) ) ? Math.log( amount ) / Math.log( 2 ) : Math.floor( Math.log( amount ) / Math.log( 2 ) ) + 1;\n    const p = Math.pow( 2, g );\n    const m = p;\n    const c = getPrimeNumber( amount );\n    const a = 1 + ( 4 * k );\n    let xNumbers = [];\n    let tableRandomNumbers = [];\n\n    xNumbers[ 0 ] = seed;\n\n    for ( let i = 1; i <= amount; i++ ) {\n        \n        xNumbers[ i ] = ( ( a * xNumbers[ i - 1 ] ) + c ) % m;\n        const ri = xNumbers[ i ] / ( m - 1 )\n        const riDigits = ri.toString().substr( 0, digits + 2 );\n\n        tableRandomNumbers[ i - 1 ] = {\n            i,\n            \"operaciones\": `((${ a } * ${ xNumbers[ i - 1 ] }) + ${ c }) mod(${ m })`,\n            \"xi\": xNumbers[ i ],\n            \"ri\": riDigits,\n        };\n    }\n    const copyOfInitialElement = { ...tableRandomNumbers[ 0 ], \"i\": tableRandomNumbers.length + 1 }\n    tableRandomNumbers[ tableRandomNumbers.length ] = copyOfInitialElement;\n\n    return {\n        tableRandomNumbers,\n        g,\n        a,\n    };\n}\n\n// console.log( getLinearAlgorithm( 24, 8, 62, 3 ) )\n\n","import React from 'react';\n\nexport const ResultsTableMultiplicativeAlgorithm = ({ series }) => {\n\n    const { tableRandomNumbers } = series;\n\n    return (\n        <>\n            <div className=\"d-flex justify-content-center\">\n                \n                <div className=\"mt-5 p-5 d-inline-flex flex-column\">\n                    <table className=\"table table-bordered\">\n                        <thead className=\"bg-success\">\n                            <tr>\n                                <th scope=\"col\"> i </th>\n                                <th scope=\"col\"> Operaciones </th>\n                                <th scope=\"col\"> X(i) </th>\n                                <th scope=\"col\"> r(i) </th>\n                            </tr>\n                        </thead>\n                    <tbody>\n                            {\n                                tableRandomNumbers.map( row => (\n                                    <tr className=\"table-success text-center\" key={ row.i }>\n                                        <th scope=\"row\">{ row.i }</th>\n                                        <td>{ row.operaciones }</td>\n                                        <td>{ row.xi }</td>\n                                        <td>{ row.ri }</td>\n                                    </tr>\n                                ))\n                           }\n                           \n                        </tbody>\n                        \n                    </table>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from 'react';\n\nimport { ResultsTableMultiplicativeAlgorithm } from './ResultsTableMultiplicativeAlgorithm';\n\nimport { useForm } from '../../../hooks/useForm';\nimport { getMultiplicativeAlgorithm } from '../../../helpers/methods/multiplicativeAlgorithm';\n\nexport const MultiplicativeAlgorithm = () => {\n\n    const [ solved, setSolved ] = useState( false );\n    const [ table, setTable ] = useState({});\n\n    const [ { semilla, cantidad, constanteK, numDigitos }, handleInputChange ] = useForm({\n        semilla: \"\",\n        cantidad: \"\",\n        constanteK: \"\",\n        numDigitos: \"\",\n    });\n\n    const handleSubmit = ( event ) => {\n        event.preventDefault();\n        setSolved( true );\n        setTable( getMultiplicativeAlgorithm( parseInt( semilla ), parseInt( cantidad ), parseInt( constanteK ), parseInt( numDigitos ) ) );\n    }\n\n    const handleHideClick = ( event ) => {\n        setSolved( false );\n    };\n\n    return (\n        <>\n\n            <div className=\"\">\n                <h1 className=\"text-center\"> Numeros Pseudo Aleatorios </h1>\n            </div>\n            <hr />\n            <div className=\"d-flex justify-content-center\">\n                <div className=\"mt-5 jumbotron p-5 text-secondary d-inline-flex flex-column\">\n                    <h3 className=\"font-weight-bold text-center display-5\"> Algoritmo Congruencial <br /> Multiplicativo </h3>\n                    <hr />\n                    <div className=\"\">\n                        <form onSubmit={ handleSubmit }>\n                            <div className=\"form-group\">\n                                <label> Semilla x0 </label>\n                                <input\n                                    name=\"semilla\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"6345\"\n                                    onChange={ handleInputChange }\n                                />\n                                <small className=\"form-text text-muted\"> Debe introducir un numero mayor a 0 </small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label> Cantidad (Periodo) </label>\n                                <input\n                                    name=\"cantidad\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"10\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <label> Constante K </label>\n                                <input\n                                    name=\"constanteK\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"543\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label> Numero de digitos deseados </label>\n                                <input\n                                    name=\"numDigitos\"\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"3\"\n                                    onChange={ handleInputChange }\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-success\"> Generar </button>\n                            {\n                                solved\n                                &&\n                                <button className=\"btn btn-danger ml-3\" onClick={ handleHideClick }> Ocultar </button>\n                            }\n                        </form>\n                        {\n                            solved\n                            &&\n                            <>\n                                <div class=\"alert alert-success mt-5\" role=\"alert\">\n                                    <strong> g = { table.g } </strong>\n                                </div>\n                                <div class=\"alert alert-success mt-2\" role=\"alert\">\n                                    <strong> a = { table.a } </strong>\n                                </div>\n                            </>\n                        }\n                        \n                    </div>\n                </div>\n            </div>\n\n            {\n                solved\n                &&\n                <ResultsTableMultiplicativeAlgorithm series={ table } />\n            }\n        </>\n    );\n};\n\n","export const getMultiplicativeAlgorithm = ( seed, amount, k, digits ) => {\n\n    const g = ( Number.isInteger( Math.log( amount ) / Math.log( 2 ) ) ? Math.log( amount ) / Math.log( 2 ) : Math.floor( Math.log( amount ) / Math.log( 2 ) ) + 1 ) + 2;\n    const p = Math.pow( 2, g );\n    const m = p;\n    const a = 3 + ( 8 * k );\n    let xNumbers = [];\n    let tableRandomNumbers = [];\n\n    xNumbers[ 0 ] = seed;\n\n    for ( let i = 1; i <= amount; i++ ) {\n        \n        xNumbers[ i ] = ( a * xNumbers[ i - 1 ] ) % m;\n        const ri = xNumbers[ i ] / ( m - 1 )\n        const riDigits = ri.toString().substr( 0, digits + 2 );\n\n        tableRandomNumbers[ i - 1 ] = {\n            i,\n            \"operaciones\": `(${ a } * ${ xNumbers[ i - 1 ] }) mod(${ m })`,\n            \"xi\": xNumbers[ i ],\n            \"ri\": riDigits,\n        };\n    }\n    const copyOfInitialElement = { ...tableRandomNumbers[ 0 ], \"i\": tableRandomNumbers.length + 1 }\n    tableRandomNumbers[ tableRandomNumbers.length ] = copyOfInitialElement;\n\n    return {\n        tableRandomNumbers,\n        g,\n        a,\n    };\n}\n\n// console.log( getLinearAlgorithm( 24, 8, 62, 3 ) )\n","import React from 'react';\n\nexport const About = () => {\n\n    return (\n        <>\n            <div className=\"mt-5\">\n                <h1 className=\"text-center\"> Acerca de  </h1>\n            </div>\n            <br />\n            <br />\n            <h3 className=\"text-center\">\n                Aplicacion web realizada por <strong>Marlene</strong> del <strong>7mo Semestre</strong> de la carrera de <br /> \n                <strong>Ingenieria Mecatronica</strong> de la <strong>Escuela Militar de Ingenieria</strong>, <br />\n                para la materia de <strong>MODELADO Y SIMULACION DE SISTEMAS</strong>\n            </h3>\n        </>\n    );\n};\n","import React, { useState } from 'react';\n\nimport { MiddleSquare } from '../methods/middle-square/MiddleSquare';\nimport { MiddleProduct } from '../methods/middle-product/MiddleProduct';\nimport { LinearAlgorithm } from '../methods/linear-algorithm/LinearAlgorithm';\nimport { MultiplicativeAlgorithm } from '../methods/multiplicative-algorithm/MultiplicativeAlgorithm';\nimport { About } from '../about/About';\n\nimport './sidebar.css';\n\nexport const Sidebar = () => {\n\n    const [ currentPage, setCurrentPage ] = useState( \"middle-square\" );\n\n    const handleClick = ({ target }) => {\n        setCurrentPage( target.name.toString() );\n    };\n\n    const pages = {\n        \"middle-square\": <MiddleSquare />,\n        \"middle-product\": <MiddleProduct />,\n        \"linear-algorithm\": <LinearAlgorithm />,\n        \"multiplicative-algorithm\": <MultiplicativeAlgorithm />,\n        \"about\": <About />\n    };\n\n    return (\n        <>\n            <div className=\"sidebar-container\">\n                <div className=\"sidebar-logo\">\n                    Algoritmos de Numeros Pseudo Aleatorios\n                </div>\n                <ul className=\"sidebar-navigation\">\n                    <li className=\"header\"> No congruenciales </li>\n                    <li>\n                        <button name=\"middle-square\" onClick={ handleClick }>\n                            <i className=\"fa fa-home\" aria-hidden=\"true\"></i> Algoritmo de los cuadrados medios\n                        </button>\n                    </li>\n                    <li>\n                        <button name=\"middle-product\" onClick={ handleClick }>\n                            <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> Algoritmo de los productos medios\n                        </button>\n                    </li>\n                    <li className=\"header\"> Congruenciales </li>\n                    <li>\n                        <button name=\"linear-algorithm\" onClick={ handleClick }>\n                            <i className=\"fa fa-users\" aria-hidden=\"true\"></i> Algoritmo lineal\n                        </button>\n                    </li>\n                    <li>\n                        <button name=\"multiplicative-algorithm\" onClick={ handleClick }>\n                            <i className=\"fa fa-cog\" aria-hidden=\"true\"></i> Algoritmo Multiplicativo\n                        </button>\n                    </li>\n                    <li className=\"header\"> Marlene </li>\n                    <li>\n                        <button name=\"about\" onClick={ handleClick }>\n                            <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i> Acerca de\n                        </button>\n                    </li>\n                </ul>\n            </div>\n            <div className=\"content-container\">\n                <div className=\"container-fluid\">\n                    {\n                        pages[ currentPage ]\n                    }\n                </div>\n            </div>\n        </>\n    );\n};\n","import React from 'react';\n\nimport { Sidebar } from './components/sidebar/Sidebar';\n\nexport const PseudoAleatorio = () => {\n\n    return (\n        <>\n            <Sidebar />\n        </>\n    );\n};\n","import React from 'react';   // Importamos React desde react\nimport ReactDOM from 'react-dom'; // Importamos ReactDOM desde react-dom\n\nimport { PseudoAleatorio } from './PseudoAleatorio';\n\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(\n    <PseudoAleatorio />,\n    divRoot\n);\n"],"sourceRoot":""}